name: Sales Service CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'sales-service/**'
      - '.github/workflows/sales-service.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'sales-service/**'
      - '.github/workflows/sales-service.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sales-service

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio pytest-mock coveralls
    
    - name: Run tests with coverage
      env:
        MONGODB_URI: mongodb://localhost:27017/sales_db
        CORE_SERVICE_URL: http://core-service:8000
        PYTHONPATH: $PYTHONPATH:$(pwd)
      run: |
        pytest --cov=app --cov-report=xml -v
    
    - name: Upload coverage to Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --service=github

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ./sales-service
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/sales-service:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: echo "Deploy to production" 